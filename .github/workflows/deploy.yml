name: Deploy to EKS

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests before deploy'
        required: true
        default: true
        type: boolean

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: juans-fastapi-poc

jobs:
  test:
    name: 'Run Tests'
    if: ${{ inputs.run_tests }}
    uses: ./.github/workflows/tests.yml

  deploy:
    name: 'Deploy Infrastructure and App'
    runs-on: ubuntu-latest
    needs: test
    if: always() && (needs.test.result == 'success' || inputs.run_tests == false)
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Init and Apply
      working-directory: ./terraform
      run: |
        terraform init
        terraform apply -auto-approve -input=false \
          -var="aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f kubernetes/postgres-db-persistent-volume-claim.yml
        kubectl apply -f kubernetes/postgres-db-stateful-set.yml
        kubectl apply -f kubernetes/postgres-db-service.yml
        kubectl apply -f kubernetes/juans-fastapi-poc-deployment.yml
        kubectl apply -f kubernetes/juans-fastapi-poc-service.yml

    - name: Wait for PostgreSQL to be ready
      run: kubectl wait --for=condition=ready pod -l app=juans-fastapi-poc-postgres --timeout=300s

    - name: Verify deployment
      run: |
        kubectl get pods
        kubectl get services 